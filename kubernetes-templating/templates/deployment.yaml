apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-nginx-deployment
  labels:
    app: {{.Release.Name}}-nginx
  namespace: {{.Values.namespace}}
spec:
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      app: {{.Release.Name}}-nginx
  template:
    metadata:
      labels:
        app: {{.Release.Name}}-nginx
    spec:
      serviceAccountName: sa
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{.Release.Name}}-nginx
            topologyKey: "kubernetes.io/hostname"    
      containers:
      - name: {{.Release.Name}}-nginx
        image: {{.Values.image.container.repository}}:{{.Values.image.container.tag}}
        ports:
        - containerPort: {{.Values.service.targetPort}}
        volumeMounts:
        - name: workdir
          mountPath: /homework
        - name: workfile
          mountPath: /homework/conf
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","rm -f /homework/index.html"]
        {{- if .Values.probe.enabled }}
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/index.html"
            port: {{.Values.service.targetPort}}
        {{- end }}    
      initContainers:
      - name: {{.Release.Name}}-wget-index
        image: {{.Values.image.init_container.repository}}:{{.Values.image.init_container.tag}}
        command:
        - wget
        - "-O"
        - "/init/index.html"
        - http://info.cern.ch
        volumeMounts:
        - name: workdir
          mountPath: "/init"
      - name: {{.Release.Name}}-wget-metrics
        image: {{.Values.image.init_container.repository}}:{{.Values.image.init_container.tag}}
        command:
         - sh
         - '-c'
         - >
           TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);
           wget --no-check-certificate --header="Authorization: Bearer ${TOKEN}" \
             --output-document=/init/metrics.html https://kubernetes.default.svc/metrics
        volumeMounts:
        - name: workdir
          mountPath: "/init"             
      volumes:
      - name: workdir
        persistentVolumeClaim:
          claimName: pvc-sc
      - name: workfile
        configMap:
          name: {{.Release.Name}}-conf-map
          items:
          - key: "file"
            path: "file" 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1